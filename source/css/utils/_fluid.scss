@use "sass:math";

$fluid-min-width: 420px !default;
$fluid-max-width: 1280px !default;

$fluid-min-height: 320px !default;
$fluid-max-height: 1024px !default;

@mixin fluid-property(
    $properties,
    $min-value, $max-value,
    $min-width: $fluid-min-width, $max-width: $fluid-max-width,
    $min-width-calc: $min-width, $max-width-calc: $max-width,
) {
    @each $property in $properties {
        #{$property}: $min-value;
    }

    @if (
        not unitless($min-value) and (
            unit($min-value) != unit($min-width-calc) or
            not comparable($min-value, $min-width-calc)
        )
    ) {
        @error "Cant calc $min-value=#{$min-value} and $min-width-calc=#{$min-width-calc} with different units.";
    }

    @if (
        not unitless($max-value) and (
            unit($max-value) != unit($max-width-calc) or
            not comparable($max-value, $max-width-calc)
        )
    ) {
        @error "Cant calc $max-value=#{$max-value} and $max-width-calc=#{$max-width-calc} with different units.";
    }

    $value-calc: strip-unit($max-value - $min-value);
    $width-calc: strip-unit($max-width-calc - $min-width-calc);

    @media (min-width: $min-width) {
        @each $property in $properties {
            #{$property}: calc(#{$min-value} + #{$value-calc} * (100vw - #{$min-width-calc}) / #{$width-calc});
        }
    }

    @media (min-width: $max-width) {
        @each $property in $properties {
            #{$property}: $max-value;
        }
    }
}

@mixin fluid-property-vertical(
    $properties,
    $min-value, $max-value,
    $min-height: $fluid-min-height, $max-height: $fluid-max-height,
    $min-height-calc: $min-height, $max-height-calc: $max-height,
) {
    @each $property in $properties {
        #{$property}: $min-value;
    }

    @if (
        not unitless($min-value) and (
            unit($min-value) != unit($min-height-calc) or
            not comparable($min-value, $min-height-calc)
        )
    ) {
        @error "Cant calc $min-value=#{$min-value} and $min-height-calc=#{$min-height-calc} with different units.";
    }

    @if (
        not unitless($max-value) and (
            unit($max-value) != unit($max-height-calc) or
            not comparable($max-value, $max-height-calc)
        )
    ) {
        @error "Cant calc $max-value=#{$max-value} and $max-height-calc=#{$max-height-calc} with different units.";
    }

    $value-calc: strip-unit($max-value - $min-value);
    $height-calc: strip-unit($max-height-calc - $min-height-calc);

    @media (min-height: $min-height) {
        @each $property in $properties {
            #{$property}: calc(#{$min-value} + #{$value-calc} * (100vh - #{$min-height-calc}) / #{$height-calc});
        }
    }

    @media (min-height: $max-height) {
        @each $property in $properties {
            #{$property}: $max-value;
        }
    }
}

@mixin fluid-font-size(
    $min-value, $max-value,
    $min-width: $fluid-min-width, $max-width: $fluid-max-width,
    $min-width-calc: $min-width, $max-width-calc: $max-width,
) {
    @include fluid-property(
        font-size,
        $min-value, $max-value,
        $min-width, $max-width,
        $min-width-calc, $max-width-calc,
    );
}

@mixin fluid-font-size-vertical(
    $min-value, $max-value,
    $min-height: $fluid-min-height, $max-height: $fluid-max-height,
    $min-height-calc: $min-height, $max-height-calc: $max-height,
) {
    @include fluid-property-vertical(
        font-size,
        $min-value, $max-value,
        $min-height, $max-height,
        $min-height-calc, $max-height-calc,
    );
}

@function fluid-clamp($min-size, $max-size, $min-width: $fluid-min-width, $max-width: $fluid-max-width) {
    $min-size: rem($min-size);
    $max-size: rem($max-size);

    $min-size: strip-unit($min-size);
    $max-size: strip-unit($max-size);

    $min-width: strip-unit($min-width);
    $max-width: strip-unit($max-width);

    $vw-coefficient: to-fixed(math.div((16 * 100 * ($max-size - $min-size)), ($max-width - $min-width)), 2);
    $rem-coefficient: to-fixed(($min-size) - math.div((($min-width) * ($max-size - $min-size)), ($max-width - $min-width)), 2);

    $rem-sign: "";
    @if ($rem-coefficient >= 0) {
        $rem-sign: "+";
    } @else {
        $rem-sign: "-";
    }

    $abs-rem-coefficient: abs($rem-coefficient);

    @return clamp(#{$min-size}rem, #{$vw-coefficient}vw #{$rem-sign} #{$abs-rem-coefficient}rem, #{$max-size}rem);
}
